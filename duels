--[[ 
    Rivals Open Source (silent aim)
]]

local VirtualInputManager = game:GetService("VirtualInputManager")
local runS = game:GetService("RunService")
local pl = game:GetService("Players")
local lp = pl.LocalPlayer
local char = lp.Character or lp.CharacterAdded:Wait()
local ws = game:GetService("Workspace")
local camera = workspace.CurrentCamera
local UIS = game:GetService("UserInputService")
local mousePPos = UIS:GetMouseLocation()
runS.RenderStepped:Connect(function() mousePPos = UIS:GetMouseLocation() end)
local Center = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)

local FullSettings = {
    AimBot = {
        Checks = {
            TeamCheck = true,
            WallCheck = true,
            AliveCheck = true
        },
        Fov = {
            Enable = true,
            Visible = true,
            Thickness = 0.6,
            Color = Color3.fromRGB(255, 255, 255),
            LockColor = Color3.fromRGB(255, 0, 0),
            OffColor = Color3.fromRGB(150, 150, 150),
            Filled = false,
            Size = 300  -- Valor inicial do FOV
        },
        Values = {
            Enable = true,
            Toggle = false,
            HitPart = "HitboxHead",
            HitPartList = {"Head", "LeftFoot", "LeftHand", "LeftLowerArm", "LeftLowerLeg", "LeftUpperArm", "LowerTorso", "RightFoot", "RightHand", "RightLowerArm", "RightLowerLeg", "RightUpperArm", "RightUpperLeg", "UpperTorso", "HitboxBody", "FakeMass", "HitboxBodySmall", "HumanoidRootPart"},
            TriggerKey = Enum.UserInputType.MouseButton2,
        }
    },
    Esp = {
        Checks = {
            TeamCheck = true,
            WallCheck = false,
            AliveCheck = true
        },
        Values = {
            Enabled = true,
            FillColor = Color3.fromRGB(255, 255, 255),
            FillTransparency = 0.5,
            OutlineColor = Color3.fromRGB(200, 200, 200),
            OutlineTransparency = 0
        }
    }
}

--[[ 
    Execute Lua "G.infinjump = true" to explicitly turn the infinite jump script on
    Execute Lua "G.infinjump = false" to explicitly turn the infinite jump script off
]]
 
-- Toggles the infinite jump between on or off on every script run
_G.infinjump = not _G.infinjump
 
if _G.infinJumpStarted == nil then
    -- Ensures this only runs once to save resources
    _G.infinJumpStarted = true
    
    -- Notifies readiness
    game.StarterGui:SetCore("SendNotification", {Title="Lox Private"; Text="Bem Vindo!"; Duration=5;})

    -- The actual infinite jump
    local plr = game:GetService('Players').LocalPlayer
    local m = plr:GetMouse()
    
    -- Handle jumping action
    m.KeyDown:connect(function(k)
        if _G.infinjump then
            if k:byte() == 32 then
                local humanoid = game:GetService'Players'.LocalPlayer.Character:FindFirstChildOfClass('Humanoid')
                humanoid:ChangeState('Jumping')
                wait()
                humanoid:ChangeState('Seated')
            end
        end
    end)

    -- Toggle infinite jump with the "U" key
    m.KeyDown:connect(function(k)
        if k:lower() == "u" then
            -- Toggle the state of infinite jump
            _G.infinjump = not _G.infinjump
            if _G.infinjump then
                game.StarterGui:SetCore("SendNotification", {Title="Infinite Jump"; Text="Activated!"; Duration=3;})
            else
                game.StarterGui:SetCore("SendNotification", {Title="Infinite Jump"; Text="Deactivated!"; Duration=3;})
            end
        end
    end)
end


do -- Aimbot
    local FOV = Drawing.new("Circle")
    FOV.Visible = FullSettings.AimBot.Fov.Visible
    FOV.Thickness = FullSettings.AimBot.Fov.Thickness
    FOV.Color = FullSettings.AimBot.Fov.Color
    FOV.Filled = FullSettings.AimBot.Fov.Filled
    FOV.Radius = FullSettings.AimBot.Fov.Size
    FOV.Position = mousePPos

    -- Funções para aumentar e diminuir o FOV
    local function increaseFov()
        FullSettings.AimBot.Fov.Size = FullSettings.AimBot.Fov.Size + 50
        if FullSettings.AimBot.Fov.Size > 2000 then
            FullSettings.AimBot.Fov.Size = 2000
        end
    end

    local function decreaseFov()
        FullSettings.AimBot.Fov.Size = FullSettings.AimBot.Fov.Size - 50
        if FullSettings.AimBot.Fov.Size < 50 then
            FullSettings.AimBot.Fov.Size = 50
        end
    end

    -- Conectar as teclas K e L para aumentar ou diminuir o FOV
    UIS.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        if input.UserInputType == Enum.UserInputType.Keyboard then
            if input.KeyCode == Enum.KeyCode.K then
                increaseFov()
            elseif input.KeyCode == Enum.KeyCode.L then
                decreaseFov()
            end
        end
    end)

    runS.RenderStepped:Connect(function()
        FOV.Position = mousePPos
        FOV.Radius = FullSettings.AimBot.Fov.Size  -- Atualiza o raio do FOV desenhado com o valor atual
    end)

runS.RenderStepped:Connect(function() 
    FOV.Position = mousePPos
    
    local Target = GetPartToFov(FullSettings.AimBot.Values.HitPart)
    
    if Target then
        -- Se estiver mirando em um inimigo, o FOV será vermelho
        FOV.Color = Color3.fromRGB(255, 0, 0)  -- Vermelho
    elseif lock then
        -- Se o aimbot estiver ativado, o FOV será vermelho escuro
        FOV.Color = Color3.fromRGB(139, 0, 0)  -- Vermelho escuro
    else
        -- Caso contrário, o FOV ficará na cor original (branco ou a cor definida)
        FOV.Color = FullSettings.AimBot.Fov.Color
    end
end)

    coroutine.wrap(function()
        local lock = false

        local function GetPartToFov(Part)
            for _, v in ipairs(pl:GetPlayers()) do
                if v ~= lp and v.Character and v.Character:FindFirstChild(Part) then
                    if FullSettings.AimBot.Checks.AliveCheck and v.Character:FindFirstChildOfClass("Humanoid") and v.Character.Humanoid.Health <= 0 then continue end

                    local ray = workspace:FindPartOnRayWithIgnoreList(
                        Ray.new(camera.CFrame.Position,
                        (v.Character[Part].Position - camera.CFrame.Position).Unit *
                        (v.Character[Part].Position - camera.CFrame.Position).Magnitude),
                        {lp.Character, camera}
                    )

                    if FullSettings.AimBot.Checks.WallCheck and (not ray or not ray:IsDescendantOf(v.Character)) then continue end
                    if FullSettings.AimBot.Checks.TeamCheck and v.Character:FindFirstChild("HumanoidRootPart") and v.Character.HumanoidRootPart:FindFirstChild("TeammateLabel") then continue end
                    local vPos = camera:WorldToViewportPoint(v.Character[Part].Position)
                    local distance = (Vector2.new(vPos.X, vPos.Y) - mousePPos).Magnitude

                    if FullSettings.AimBot.Fov.Enable and (distance > FullSettings.AimBot.Fov.Size) then continue end
                    return v
                end
            end
        end

        UIS.InputBegan:Connect(function(input, gameProcessedEvent)
            if gameProcessedEvent then return end
            if FullSettings.AimBot.Values.Toggle == false or FullSettings.AimBot.Values.TriggerKey == nil then
                lock = true
            else
                if input.UserInputType == FullSettings.AimBot.Values.TriggerKey then
                    lock = not lock
                end
            end
        end)

        while task.wait() do
            if FullSettings.AimBot.Values.Enable then
                if not lp.PlayerGui.MainGui.MainFrame.Lobby.Currency.Visible then
                    local Target = nil
                    Target = GetPartToFov(FullSettings.AimBot.Values.HitPart)

                    if Target ~= nil then
                        FOV.Color = FullSettings.AimBot.Fov.LockColor
                    else
                        FOV.Color = FullSettings.AimBot.Fov.Color
                    end

                    if (FullSettings.AimBot.Values.Toggle == true and lock == false) or (FullSettings.AimBot.Values.Toggle == false and not UIS:IsMouseButtonPressed(FullSettings.AimBot.Values.TriggerKey)) then
                        FOV.Color = FullSettings.AimBot.Fov.OffColor
                    end

                    if Target and Target.Character and Target.Character:FindFirstChild(FullSettings.AimBot.Values.HitPart) and lock and camera:WorldToViewportPoint(Target.Character[FullSettings.AimBot.Values.HitPart].Position).Z > 0 then
                        if not FullSettings.AimBot.Values.Toggle and FullSettings.AimBot.Values.TriggerKey and not UIS:IsMouseButtonPressed(FullSettings.AimBot.Values.TriggerKey) then continue end
                        camera.CFrame = CFrame.new(camera.CFrame.Position + (Target.Character[FullSettings.AimBot.Values.HitPart].Position - camera.CFrame.Position).Unit * 0.5, Target.Character[FullSettings.AimBot.Values.HitPart].Position)

                        VirtualInputManager:SendMouseButtonEvent(Center.X, Center.Y, 0, true, game, 0)
                        task.wait()
                        VirtualInputManager:SendMouseButtonEvent(Center.X, Center.Y, 0, false, game, 0)
                    end
                end
            end
        end
    end)()
end

do -- ESP
    -- Adiciona uma variável global para controlar se o ESP está ativado ou desativado
    if _G.espEnabled == nil then
        _G.espEnabled = true  -- Define o ESP como ativado inicialmente
    end

    coroutine.wrap(function()
        while task.wait() do
            for _, v in pairs(pl:GetPlayers()) do
                if v ~= lp and v.Character then
                    local Esp = v.Character:FindFirstChild("Esp")

                    if FullSettings.Esp.Checks.AliveCheck and v.Character:FindFirstChildOfClass("Humanoid") and v.Character.Humanoid.Health <= 0 then
                        if Esp then Esp:Destroy() end
                        continue
                    end
                    if FullSettings.Esp.Checks.TeamCheck and v.Character:FindFirstChild("HumanoidRootPart") and v.Character.HumanoidRootPart:FindFirstChild("TeammateLabel") then
                        if Esp then Esp:Destroy() end
                        continue
                    end
                    if not Esp then
                        Esp = Instance.new("Highlight")
                        Esp.Name = "Esp"
                        Esp.Parent = v.Character
                        Esp.FillColor = FullSettings.Esp.Values.FillColor
                        Esp.FillTransparency = FullSettings.Esp.Values.FillTransparency
                        Esp.OutlineColor = FullSettings.Esp.Values.OutlineColor
                        Esp.OutlineTransparency = FullSettings.Esp.Values.OutlineTransparency
                    end

                    if _G.espEnabled then
                        Esp.Enabled = true
                    else
                        Esp.Enabled = false
                    end
                end
            end
        end
    end)()

    -- Alterna o estado do ESP quando a tecla "J" for pressionada
    UIS.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        if input.KeyCode == Enum.KeyCode.J then
            _G.espEnabled = not _G.espEnabled
            if _G.espEnabled then
                game.StarterGui:SetCore("SendNotification", {Title="ESP"; Text="Ativado!"; Duration=3;})
            else
                game.StarterGui:SetCore("SendNotification", {Title="ESP"; Text="Desativado!"; Duration=3;})
            end
        end
    end)
end
